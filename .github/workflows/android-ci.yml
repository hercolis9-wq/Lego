name: Android CI (Debug APK)

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Descompacta se houver ZIP na raiz (ex.: payload.zip, lego-*.zip, etc.)
      - name: Detect & unzip Android project
        run: |
          set -euxo pipefail
          mkdir -p workspace
          ZIP_FILE=""
          if [ -f "payload.zip" ]; then
            ZIP_FILE="payload.zip"
          else
            ZIP_FILE=$(ls -1 *.zip 2>/dev/null | head -n1 || true)
          fi
          if [ -n "${ZIP_FILE}" ]; then
            echo "ZIP encontrado: ${ZIP_FILE}"
            unzip -o "${ZIP_FILE}" -d workspace
          else
            echo "Nenhum ZIP na raiz; copiando conteúdo do repo"
            rsync -a --exclude '.git' ./ workspace/
          fi
          echo "Conteúdo inicial de workspace/"
          ls -la workspace || true

      # 2) Acha a pasta com settings.gradle(.kts)
      - name: Locate Gradle project root
        id: findroot
        run: |
          set -euxo pipefail
          ROOT_CANDIDATE=$(grep -RIl --include="settings.gradle" --include="settings.gradle.kts" '^' workspace || true | head -n1 || true)
          if [ -z "${ROOT_CANDIDATE}" ]; then
            echo "❌ settings.gradle(.kts) não encontrado dentro de 'workspace/'."
            echo "Dica: o ZIP precisa conter a raiz do projeto Android (com settings.gradle.kts + app/)."
            exit 1
          fi
          PROJECT_DIR=$(dirname "${ROOT_CANDIDATE}")
          echo "PROJECT_DIR=${PROJECT_DIR}" >> $GITHUB_ENV
          echo "Projeto detectado em: ${PROJECT_DIR}"
          ls -la "${PROJECT_DIR}"

      # 3) JDK + SDK Android
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK packages & accept licenses
        run: |
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"
          yes | sdkmanager --licenses

      # 4) Instala o Gradle 8.7 localmente (sem wrapper)
      - name: Install Gradle 8.7
        run: |
          set -euxo pipefail
          curl -L -o gradle-8.7-bin.zip https://services.gradle.org/distributions/gradle-8.7-bin.zip
          unzip -q gradle-8.7-bin.zip
          echo "$PWD/gradle-8.7/bin" >> $GITHUB_PATH

      # 5) Build (sem daemon, com stacktrace)
      - name: Build Debug APK
        run: |
          gradle -p "${{ env.PROJECT_DIR }}" assembleDebug --no-daemon --stacktrace --info

      # 6) Artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: ${{ env.PROJECT_DIR }}/app/build/outputs/apk/debug/app-debug.apk
