name: Android CI (Debug APK)

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PROJECT_DIR: .

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect & unzip project if payload.zip exists
        run: |
          if [ -f "payload.zip" ]; then
            echo "payload.zip found. Unzipping to project/ ..."
            mkdir -p project
            unzip -o payload.zip -d project
            echo "PROJECT_DIR=project" >> $GITHUB_ENV
            ls -la project
          else
            echo "No payload.zip. Using repo root."
            echo "PROJECT_DIR=." >> $GITHUB_ENV
            ls -la
          fi

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK packages & accept licenses
        run: |
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"
          yes | sdkmanager --licenses

      - name: Setup Gradle 8.7
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.7

      - name: Generate Gradle Wrapper
        working-directory: ${{ env.PROJECT_DIR }}
        run: gradle wrapper --gradle-version 8.7

      - name: Verify Gradle
        working-directory: ${{ env.PROJECT_DIR }}
        run: ./gradlew --version

      - name: Build Debug APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: ./gradlew assembleDebug --no-daemon --stacktrace --info

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: ${{ env.PROJECT_DIR }}/app/build/outputs/apk/debug/app-debug.apk
